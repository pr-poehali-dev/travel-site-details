import { useState, useEffect } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'
import { Input } from '@/components/ui/input'
import { Checkbox } from '@/components/ui/checkbox'
import Icon from '@/components/ui/icon'
import ModernWorldMap from '@/components/ModernWorldMap'
import About from '@/components/About'
import AirlineAds from '@/components/AirlineAds'
import { Link } from 'react-router-dom'

interface Destination {
  id: string
  name: string
  country: string
  description: string
  image: string
  category: string
  highlights: string[]
  climate: string
  bestTime: string
  activities: string[]
  culture: string
  history: string
  cuisine: string[]
  transportation: string
  accommodation: string[]
  budget: string
  language: string
  currency: string
  safety: string
  tips: string[]
}

const destinations: Destination[] = [
  {
    id: '1',
    name: '–ê–ª—å–ø–∏–π—Å–∫–∏–µ –ø–∏–∫–∏',
    country: '–®–≤–µ–π—Ü–∞—Ä–∏—è',
    description: '–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –≥–æ—Ä–Ω—ã–µ –≤–µ—Ä—à–∏–Ω—ã —Å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç—ã–º –≤–æ–∑–¥—É—Ö–æ–º –∏ –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏',
    image: '/img/33a06e67-6498-4583-acaa-3a325092b355.jpg',
    category: '–ì–æ—Ä—ã',
    highlights: ['–ú–∞—Ç—Ç–µ—Ä—Ö–æ—Ä–Ω', '–Æ–Ω–≥—Ñ—Ä–∞—É–π–æ—Ö', '–¶–µ—Ä–º–∞—Ç—Ç', '–ì—Ä–∏–Ω–¥–µ–ª—å–≤–∞–ª—å–¥'],
    climate: '–ê–ª—å–ø–∏–π—Å–∫–∏–π –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∫–ª–∏–º–∞—Ç —Å —Ö–æ–ª–æ–¥–Ω—ã–º–∏ –∑–∏–º–∞–º–∏ –∏ –ø—Ä–æ—Ö–ª–∞–¥–Ω—ã–º –ª–µ—Ç–æ–º',
    bestTime: '–ò—é–Ω—å-—Å–µ–Ω—Ç—è–±—Ä—å –¥–ª—è –ø–æ—Ö–æ–¥–æ–≤, –¥–µ–∫–∞–±—Ä—å-–º–∞—Ä—Ç –¥–ª—è –ª—ã–∂–Ω–æ–≥–æ —Å–ø–æ—Ä—Ç–∞',
    activities: ['–ì–æ—Ä–Ω—ã–µ –ø–æ—Ö–æ–¥—ã', '–õ—ã–∂–Ω—ã–π —Å–ø–æ—Ä—Ç', '–ê–ª—å–ø–∏–Ω–∏–∑–º', '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–ö–∞–Ω–∞—Ç–Ω—ã–µ –¥–æ—Ä–æ–≥–∏'],
    culture: '–°–º–µ—Å—å –Ω–µ–º–µ—Ü–∫–æ–π, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–π –∏ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä —Å –±–æ–≥–∞—Ç—ã–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏',
    history: '–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç—ã—Å—è—á–∏ –ª–µ—Ç, –æ—Ç –∫–µ–ª—å—Ç—Å–∫–∏—Ö –ø–ª–µ–º–µ–Ω –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏',
    cuisine: ['–§–æ–Ω–¥—é', '–†–∞–∫–ª–µ—Ç', '–†—ë—à—Ç–∏', '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–π —à–æ–∫–æ–ª–∞–¥', '–ê–ª—å–ø–∏–π—Å–∫–∏–µ —Å—ã—Ä—ã'],
    transportation: '–û—Ç–ª–∏—á–Ω–∞—è –∂–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–∞—è —Å–µ—Ç—å, –∫–∞–Ω–∞—Ç–Ω—ã–µ –¥–æ—Ä–æ–≥–∏, –∞–≤—Ç–æ–±—É—Å—ã',
    accommodation: ['–ì–æ—Ä–Ω—ã–µ —à–∞–ª–µ', '–û—Ç–µ–ª–∏ –∫–ª–∞—Å—Å–∞ –ª—é–∫—Å', '–•–æ—Å—Ç–µ–ª—ã', '–ö–µ–º–ø–∏–Ω–≥–∏'],
    budget: '200-500$ –≤ –¥–µ–Ω—å (–≤—ã—Å–æ–∫–∏–µ —Ü–µ–Ω—ã)',
    language: '–ù–µ–º–µ—Ü–∫–∏–π, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π, –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π, —Ä–µ—Ç–æ—Ä–æ–º–∞–Ω—Å–∫–∏–π',
    currency: '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–π —Ñ—Ä–∞–Ω–∫ (CHF)',
    safety: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
    tips: ['–ü–æ–∫—É–ø–∞–π—Ç–µ Swiss Travel Pass', '–ë—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –∂–∏–ª—å–µ –∑–∞—Ä–∞–Ω–µ–µ', '–ë–µ—Ä–∏—Ç–µ —Ç–µ–ø–ª—É—é –æ–¥–µ–∂–¥—É']
  },
  {
    id: '2',
    name: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —Ä–∞–π',
    country: '–ú–∞–ª—å–¥–∏–≤—ã',
    description: '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç—ã–µ –≤–æ–¥—ã –∏ –±–µ–ª–æ—Å–Ω–µ–∂–Ω—ã–µ –ø–ª—è–∂–∏ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∫–æ—Ä–∞–ª–ª–æ–≤—ã—Ö —Ä–∏—Ñ–æ–≤',
    image: '/img/ad2cac84-6f93-467d-a433-dbc81ec96038.jpg',
    category: '–ü–ª—è–∂',
    highlights: ['–ê—Ç–æ–ª–ª –°–µ–≤–µ—Ä–Ω—ã–π –ú–∞–ª–µ', '–ê—Ç–æ–ª–ª –ê—Ä–∏', '–ë–∞–∞ –∞—Ç–æ–ª–ª', '–ü–æ–¥–≤–æ–¥–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã'],
    climate: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –º—É—Å—Å–æ–Ω–Ω—ã–π –∫–ª–∏–º–∞—Ç —Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ç–µ–ø–ª–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π',
    bestTime: '–ù–æ—è–±—Ä—å-–∞–ø—Ä–µ–ª—å (—Å—É—Ö–æ–π —Å–µ–∑–æ–Ω)',
    activities: ['–î–∞–π–≤–∏–Ω–≥', '–°–Ω–æ—Ä–∫–ª–∏–Ω–≥', '–†—ã–±–∞–ª–∫–∞', '–°–ü–ê', '–í–æ–¥–Ω—ã–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞'],
    culture: '–ò—Å–ª–∞–º—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ —Å –≤–ª–∏—è–Ω–∏–µ–º –∏–Ω–¥–∏–π—Å–∫–∏—Ö –∏ –∞—Ä–∞–±—Å–∫–∏—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π',
    history: '–î—Ä–µ–≤–Ω—è—è –∏—Å—Ç–æ—Ä–∏—è –º–æ—Ä–µ–ø–ª–∞–≤–∞–Ω–∏—è, –≤–ª–∏—è–Ω–∏–µ –±—É–¥–¥–∏–∑–º–∞ –∏ –∏—Å–ª–∞–º–∞',
    cuisine: ['–†—ã–±–Ω–æ–µ –∫–∞—Ä—Ä–∏', '–†–æ—à–∏', '–ú–∞—Å—Ö—É–Ω–∏', '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ —Ñ—Ä—É–∫—Ç—ã', '–ö–æ–∫–æ—Å–æ–≤—ã–µ –±–ª—é–¥–∞'],
    transportation: '–ì–∏–¥—Ä–æ—Å–∞–º–æ–ª–µ—Ç—ã, —Å–∫–æ—Ä–æ—Å—Ç–Ω—ã–µ –∫–∞—Ç–µ—Ä–∞ –º–µ–∂–¥—É –æ—Å—Ç—Ä–æ–≤–∞–º–∏',
    accommodation: ['–†–æ—Å–∫–æ—à–Ω—ã–µ —Ä–µ–∑–æ—Ä—Ç—ã', '–ë—É–Ω–≥–∞–ª–æ –Ω–∞ –≤–æ–¥–µ', '–ì–æ—Å—Ç–µ–≤—ã–µ –¥–æ–º–∞'],
    budget: '300-2000$ –≤ –¥–µ–Ω—å (—Ä–æ—Å–∫–æ—à–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)',
    language: '–î–∏–≤–µ—Ö–∏, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π',
    currency: '–ú–∞–ª—å–¥–∏–≤—Å–∫–∞—è —Ä—É—Ñ–∏—è (MVR), –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è USD',
    safety: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ –∫—É—Ä–æ—Ä—Ç–∞—Ö',
    tips: ['–£–≤–∞–∂–∞–π—Ç–µ –º–µ—Å—Ç–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏', '–ê–ª–∫–æ–≥–æ–ª—å —Ç–æ–ª—å–∫–æ –Ω–∞ –∫—É—Ä–æ—Ä—Ç–∞—Ö', '–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–æ–ª–Ω—Ü–∞']
  }
]

const countries = [
  { name: '–®–≤–µ–π—Ü–∞—Ä–∏—è', flag: 'üá®üá≠', code: 'CH', airport: 'ZUR' },
  { name: '–ú–∞–ª—å–¥–∏–≤—ã', flag: 'üá≤üáª', code: 'MV', airport: 'MLE' },
  { name: '–Ø–ø–æ–Ω–∏—è', flag: 'üáØüáµ', code: 'JP', airport: 'NRT' },
  { name: '–ò—Å–ª–∞–Ω–¥–∏—è', flag: 'üáÆüá∏', code: 'IS', airport: 'KEF' },
  { name: '–ò—Ç–∞–ª–∏—è', flag: 'üáÆüáπ', code: 'IT', airport: 'FCO' },
  { name: '–§—Ä–∞–Ω—Ü–∏—è', flag: 'üá´üá∑', code: 'FR', airport: 'CDG' },
  { name: '–ò—Å–ø–∞–Ω–∏—è', flag: 'üá™üá∏', code: 'ES', airport: 'MAD' },
  { name: '–ì–µ—Ä–º–∞–Ω–∏—è', flag: 'üá©üá™', code: 'DE', airport: 'FRA' },
  { name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', flag: 'üá¨üáß', code: 'GB', airport: 'LHR' },
  { name: '–°–®–ê', flag: 'üá∫üá∏', code: 'US', airport: 'JFK' },
  { name: '–ö–∞–Ω–∞–¥–∞', flag: 'üá®üá¶', code: 'CA', airport: 'YYZ' },
  { name: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', flag: 'üá¶üá∫', code: 'AU', airport: 'SYD' },
  { name: '–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è', flag: 'üá≥üáø', code: 'NZ', airport: 'AKL' },
  { name: '–ë—Ä–∞–∑–∏–ª–∏—è', flag: 'üáßüá∑', code: 'BR', airport: 'GRU' },
  { name: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞', flag: 'üá¶üá∑', code: 'AR', airport: 'EZE' },
  { name: '–û–ê–≠', flag: 'üá¶üá™', code: 'AE', airport: 'DXB' },
  { name: '–¢—É—Ä—Ü–∏—è', flag: 'üáπüá∑', code: 'TR', airport: 'IST' },
  { name: '–¢–∞–∏–ª–∞–Ω–¥', flag: 'üáπüá≠', code: 'TH', airport: 'BKK' },
  { name: '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è', flag: 'üá∞üá∑', code: 'KR', airport: 'ICN' },
  { name: '–ö–∏—Ç–∞–π', flag: 'üá®üá≥', code: 'CN', airport: 'PEK' },
  { name: '–ò–Ω–¥–∏—è', flag: 'üáÆüá≥', code: 'IN', airport: 'DEL' },
  { name: '–°–∏–Ω–≥–∞–ø—É—Ä', flag: 'üá∏üá¨', code: 'SG', airport: 'SIN' },
  { name: '–ú–µ–∫—Å–∏–∫–∞', flag: 'üá≤üáΩ', code: 'MX', airport: 'MEX' },
  { name: '–ï–≥–∏–ø–µ—Ç', flag: 'üá™üá¨', code: 'EG', airport: 'CAI' },
  { name: '–ú–∞—Ä–æ–∫–∫–æ', flag: 'üá≤üá¶', code: 'MA', airport: 'CMN' }
]

const russianCities = [
  { name: '–ú–æ—Å–∫–≤–∞', code: 'MOW' },
  { name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', code: 'LED' },
  { name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', code: 'SVX' },
  { name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', code: 'OVB' },
  { name: '–ö–∞–∑–∞–Ω—å', code: 'KZN' },
  { name: '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', code: 'GOJ' },
  { name: '–ß–µ–ª—è–±–∏–Ω—Å–∫', code: 'CEK' },
  { name: '–°–∞–º–∞—Ä–∞', code: 'KUF' },
  { name: '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', code: 'ROV' },
  { name: '–£—Ñ–∞', code: 'UFA' }
]

export default function Index() {
  const [selectedDestination, setSelectedDestination] = useState<Destination | null>(null)
  const [activeSection, setActiveSection] = useState<string>('home')
  const [isRouteModalOpen, setIsRouteModalOpen] = useState(false)
  const [selectedFromCity, setSelectedFromCity] = useState('')
  const [selectedToCountry, setSelectedToCountry] = useState('')
  const [departureDate, setDepartureDate] = useState('')
  const [returnDate, setReturnDate] = useState('')
  const [isRoundTrip, setIsRoundTrip] = useState(false)
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π)
  useEffect(() => {
    const today = new Date()
    const defaultDate = new Date(today.getTime() + 30 * 24 * 60 * 60 * 1000)
    const dateString = defaultDate.toISOString().split('T')[0]
    setDepartureDate(dateString)
  }, [])

  if (activeSection === 'map') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
        {/* Navigation */}
        <nav className="border-b border-white/10 bg-black/20 backdrop-blur-md sticky top-0 z-50">
          <div className="container mx-auto px-4 sm:px-6 py-3 sm:py-4">
            <div className="flex items-center justify-between">
              <button 
                onClick={() => setActiveSection('home')} 
                className="flex items-center space-x-2 sm:space-x-3"
              >
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-lg sm:rounded-xl bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                  <Icon name="Compass" size={20} className="text-white sm:w-6 sm:h-6" />
                </div>
                <h1 className="text-xl sm:text-2xl font-bold text-white">–°—Ç—Ä–∞–Ω–Ω–∏–∫</h1>
              </button>
              <div className="hidden md:flex items-center space-x-8">
                <button 
                  onClick={() => setActiveSection('home')} 
                  className="text-white/80 hover:text-white transition-colors font-medium"
                >
                  –ì–ª–∞–≤–Ω–∞—è
                </button>
                <button 
                  onClick={() => setActiveSection('map')} 
                  className="text-blue-400 transition-colors font-medium"
                >
                  –ö–∞—Ä—Ç–∞
                </button>
                <Link 
                  to="/hotels" 
                  className="text-white/80 hover:text-white transition-colors font-medium flex items-center gap-1"
                >
                  <Icon name="Hotel" size={16} />
                  –û—Ç–µ–ª–∏
                </Link>
                <button 
                  onClick={() => setActiveSection('about')} 
                  className="text-white/80 hover:text-white transition-colors font-medium"
                >
                  –û –ø—Ä–æ–µ–∫—Ç–µ
                </button>
                <Link 
                  to="/news" 
                  className="text-white/80 hover:text-cyan-400 transition-colors font-medium"
                >
                  –ù–æ–≤–æ—Å—Ç–∏
                </Link>
                <Link 
                  to="/radar" 
                  className="text-white/80 hover:text-cyan-400 transition-colors font-medium flex items-center gap-1"
                >
                  <Icon name="Plane" size={16} />
                  –†–∞–¥–∞—Ä
                </Link>
              </div>
              <div className="md:hidden">
                <Link 
                  to="/hotels" 
                  className="text-white/80 hover:text-white transition-colors flex items-center gap-1 text-sm"
                >
                  <Icon name="Hotel" size={18} />
                </Link>
              </div>
              <Dialog open={isRouteModalOpen} onOpenChange={setIsRouteModalOpen}>
                <DialogTrigger asChild>
                  <Button className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 border-0 text-white">
                    <Icon name="Route" size={16} className="mr-2" />
                    –ú–æ–π –º–∞—Ä—à—Ä—É—Ç
                  </Button>
                </DialogTrigger>
                <DialogContent className="sm:max-w-[500px] bg-slate-800/95 backdrop-blur-xl border border-white/10">
                  <DialogHeader>
                    <DialogTitle className="text-white text-xl font-semibold">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç</DialogTitle>
                    <DialogDescription className="text-white/70">
                      –û—Ç–∫—É–¥–∞ –∏ –∫—É–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å?
                    </DialogDescription>
                  </DialogHeader>
                  <div className="space-y-6">
                    <div className="space-y-3">
                      <label className="text-white font-medium">–û—Ç–∫—É–¥–∞ (–†–æ—Å—Å–∏—è)</label>
                      <Select value={selectedFromCity} onValueChange={setSelectedFromCity}>
                        <SelectTrigger className="bg-white/10 border-white/20 text-white">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è" />
                        </SelectTrigger>
                        <SelectContent className="bg-slate-800 border-white/20">
                          {russianCities.map((city) => (
                            <SelectItem 
                              key={city.code} 
                              value={city.code}
                              className="text-white hover:bg-white/10"
                            >
                              {city.name}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>
                    
                    <div className="space-y-3">
                      <label className="text-white font-medium">–ö—É–¥–∞ (–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)</label>
                      <Select value={selectedToCountry} onValueChange={setSelectedToCountry}>
                        <SelectTrigger className="bg-white/10 border-white/20 text-white">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è" />
                        </SelectTrigger>
                        <SelectContent className="bg-slate-800 border-white/20 max-h-[200px]">
                          {countries.map((country) => (
                            <SelectItem 
                              key={country.code} 
                              value={country.code}
                              className="text-white hover:bg-white/10"
                            >
                              <span className="flex items-center gap-2">
                                {country.flag} {country.name}
                              </span>
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="space-y-3">
                      <label className="text-white font-medium">–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</label>
                      <Input
                        type="date"
                        value={departureDate}
                        onChange={(e) => setDepartureDate(e.target.value)}
                        className="bg-white/10 border-white/20 text-white [&::-webkit-calendar-picker-indicator]:invert"
                        min={new Date().toISOString().split('T')[0]}
                      />
                    </div>

                    <div className="flex items-center space-x-3">
                      <Checkbox
                        id="roundTrip"
                        checked={isRoundTrip}
                        onCheckedChange={(checked) => {
                          setIsRoundTrip(checked as boolean)
                          if (!checked) {
                            setReturnDate('')
                          }
                        }}
                        className="border-white/20 data-[state=checked]:bg-blue-500"
                      />
                      <label htmlFor="roundTrip" className="text-white font-medium cursor-pointer">
                        –û–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç
                      </label>
                    </div>

                    {isRoundTrip && (
                      <div className="space-y-3">
                        <label className="text-white font-medium">–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞</label>
                        <Input
                          type="date"
                          value={returnDate}
                          onChange={(e) => setReturnDate(e.target.value)}
                          className="bg-white/10 border-white/20 text-white [&::-webkit-calendar-picker-indicator]:invert"
                          min={departureDate || new Date().toISOString().split('T')[0]}
                        />
                      </div>
                    )}
                    
                    <Button 
                      onClick={() => {
                        if (selectedFromCity && selectedToCountry && departureDate) {
                          const selectedCountry = countries.find(c => c.code === selectedToCountry)
                          const destinationAirport = selectedCountry?.airport || selectedToCountry
                          
                          // –§–æ—Ä–º–∞—Ç URL –¥–ª—è Aeroflot —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
                          let aeroflotUrl = `https://www.aeroflot.ru/sb/booking?from=${selectedFromCity}&to=${destinationAirport}&departure=${departureDate}&passengers=1&class=economy&direct=false`
                          
                          // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç –∏ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
                          if (isRoundTrip && returnDate) {
                            aeroflotUrl += `&return=${returnDate}&tripType=round`
                          } else {
                            aeroflotUrl += `&tripType=one-way`
                          }
                          
                          window.open(aeroflotUrl, '_blank')
                          setIsRouteModalOpen(false)
                        }
                      }}
                      className="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white border-0 h-12 text-lg font-semibold"
                      disabled={!selectedFromCity || !selectedToCountry || !departureDate || (isRoundTrip && !returnDate)}
                    >
                      <Icon name="Plane" size={20} className="mr-2" />
                      –ù–∞–π—Ç–∏ —Ä–µ–π—Å—ã –Ω–∞ –ê—ç—Ä–æ—Ñ–ª–æ—Ç
                    </Button>
                  </div>
                </DialogContent>
              </Dialog>
            </div>
          </div>
        </nav>
        <ModernWorldMap />
      </div>
    )
  }

  if (activeSection === 'about') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
        {/* Navigation */}
        <nav className="border-b border-white/10 bg-black/20 backdrop-blur-md sticky top-0 z-50">
          <div className="container mx-auto px-6 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 rounded-xl bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                  <Icon name="Compass" size={24} className="text-white" />
                </div>
                <h1 className="text-2xl font-bold text-white">–°—Ç—Ä–∞–Ω–Ω–∏–∫</h1>
              </div>
              <div className="hidden md:flex items-center space-x-8">
                <button 
                  onClick={() => setActiveSection('home')} 
                  className="text-white/80 hover:text-white transition-colors font-medium"
                >
                  –ì–ª–∞–≤–Ω–∞—è
                </button>
                <button 
                  onClick={() => setActiveSection('map')} 
                  className="text-white/80 hover:text-white transition-colors font-medium"
                >
                  –ö–∞—Ä—Ç–∞
                </button>
                <a href="#" className="text-white/80 hover:text-white transition-colors font-medium">–°—Ç—Ä–∞–Ω—ã</a>
                <Link 
                  to="/news" 
                  className="text-white/80 hover:text-cyan-400 transition-colors font-medium"
                >
                  –ù–æ–≤–æ—Å—Ç–∏
                </Link>
                <Link 
                  to="/radar" 
                  className="text-white/80 hover:text-cyan-400 transition-colors font-medium flex items-center gap-1"
                >
                  <Icon name="Plane" size={16} />
                  –†–∞–¥–∞—Ä
                </Link>
                <button 
                  onClick={() => setActiveSection('about')} 
                  className="text-blue-400 transition-colors font-medium"
                >
                  –û –ø—Ä–æ–µ–∫—Ç–µ
                </button>
              </div>
              <Dialog open={isRouteModalOpen} onOpenChange={setIsRouteModalOpen}>
                <DialogTrigger asChild>
                  <Button className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 border-0 text-white">
                    <Icon name="Route" size={16} className="mr-2" />
                    –ú–æ–π –º–∞—Ä—à—Ä—É—Ç
                  </Button>
                </DialogTrigger>
                <DialogContent className="sm:max-w-[500px] bg-slate-800/95 backdrop-blur-xl border border-white/10">
                  <DialogHeader>
                    <DialogTitle className="text-white text-xl font-semibold">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç</DialogTitle>
                    <DialogDescription className="text-white/70">
                      –û—Ç–∫—É–¥–∞ –∏ –∫—É–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å?
                    </DialogDescription>
                  </DialogHeader>
                  <div className="space-y-6">
                    <div className="space-y-3">
                      <label className="text-white font-medium">–û—Ç–∫—É–¥–∞ (–†–æ—Å—Å–∏—è)</label>
                      <Select value={selectedFromCity} onValueChange={setSelectedFromCity}>
                        <SelectTrigger className="bg-white/10 border-white/20 text-white">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è" />
                        </SelectTrigger>
                        <SelectContent className="bg-slate-800 border-white/20">
                          {russianCities.map((city) => (
                            <SelectItem 
                              key={city.code} 
                              value={city.code}
                              className="text-white hover:bg-white/10"
                            >
                              {city.name}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>
                    
                    <div className="space-y-3">
                      <label className="text-white font-medium">–ö—É–¥–∞ (–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)</label>
                      <Select value={selectedToCountry} onValueChange={setSelectedToCountry}>
                        <SelectTrigger className="bg-white/10 border-white/20 text-white">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è" />
                        </SelectTrigger>
                        <SelectContent className="bg-slate-800 border-white/20 max-h-[200px]">
                          {countries.map((country) => (
                            <SelectItem 
                              key={country.code} 
                              value={country.code}
                              className="text-white hover:bg-white/10"
                            >
                              <span className="flex items-center gap-2">
                                {country.flag} {country.name}
                              </span>
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="space-y-3">
                      <label className="text-white font-medium">–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</label>
                      <Input
                        type="date"
                        value={departureDate}
                        onChange={(e) => setDepartureDate(e.target.value)}
                        className="bg-white/10 border-white/20 text-white [&::-webkit-calendar-picker-indicator]:invert"
                        min={new Date().toISOString().split('T')[0]}
                      />
                    </div>

                    <div className="flex items-center space-x-3">
                      <Checkbox
                        id="roundTrip"
                        checked={isRoundTrip}
                        onCheckedChange={(checked) => {
                          setIsRoundTrip(checked as boolean)
                          if (!checked) {
                            setReturnDate('')
                          }
                        }}
                        className="border-white/20 data-[state=checked]:bg-blue-500"
                      />
                      <label htmlFor="roundTrip" className="text-white font-medium cursor-pointer">
                        –û–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç
                      </label>
                    </div>

                    {isRoundTrip && (
                      <div className="space-y-3">
                        <label className="text-white font-medium">–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞</label>
                        <Input
                          type="date"
                          value={returnDate}
                          onChange={(e) => setReturnDate(e.target.value)}
                          className="bg-white/10 border-white/20 text-white [&::-webkit-calendar-picker-indicator]:invert"
                          min={departureDate || new Date().toISOString().split('T')[0]}
                        />
                      </div>
                    )}
                    
                    <Button 
                      onClick={() => {
                        if (selectedFromCity && selectedToCountry && departureDate) {
                          const selectedCountry = countries.find(c => c.code === selectedToCountry)
                          const destinationAirport = selectedCountry?.airport || selectedToCountry
                          
                          // –§–æ—Ä–º–∞—Ç URL –¥–ª—è Aeroflot —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
                          let aeroflotUrl = `https://www.aeroflot.ru/sb/booking?from=${selectedFromCity}&to=${destinationAirport}&departure=${departureDate}&passengers=1&class=economy&direct=false`
                          
                          // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç –∏ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
                          if (isRoundTrip && returnDate) {
                            aeroflotUrl += `&return=${returnDate}&tripType=round`
                          } else {
                            aeroflotUrl += `&tripType=one-way`
                          }
                          
                          window.open(aeroflotUrl, '_blank')
                          setIsRouteModalOpen(false)
                        }
                      }}
                      className="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white border-0 h-12 text-lg font-semibold"
                      disabled={!selectedFromCity || !selectedToCountry || !departureDate || (isRoundTrip && !returnDate)}
                    >
                      <Icon name="Plane" size={20} className="mr-2" />
                      –ù–∞–π—Ç–∏ —Ä–µ–π—Å—ã –Ω–∞ –ê—ç—Ä–æ—Ñ–ª–æ—Ç
                    </Button>
                  </div>
                </DialogContent>
              </Dialog>
            </div>
          </div>
        </nav>
        <About />
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white">
      <AirlineAds />
      {/* Navigation */}
      <nav className="border-b border-white/10 bg-black/20 backdrop-blur-md sticky top-0 z-50">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 rounded-xl bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                <Icon name="Compass" size={24} className="text-white" />
              </div>
              <h1 className="text-2xl font-bold text-white">–°—Ç—Ä–∞–Ω–Ω–∏–∫</h1>
            </div>
            <div className="hidden md:flex items-center space-x-8">
              <button 
                onClick={() => setActiveSection('home')} 
                className="text-blue-400 transition-colors font-medium"
              >
                –ì–ª–∞–≤–Ω–∞—è
              </button>
              <button 
                onClick={() => setActiveSection('map')} 
                className="text-white/80 hover:text-white transition-colors font-medium"
              >
                –ö–∞—Ä—Ç–∞
              </button>
              <a href="#" className="text-white/80 hover:text-white transition-colors font-medium">–°—Ç—Ä–∞–Ω—ã</a>
              <button 
                onClick={() => setActiveSection('about')} 
                className="text-white/80 hover:text-white transition-colors font-medium"
              >
                –û –ø—Ä–æ–µ–∫—Ç–µ
              </button>
              <Link 
                to="/news" 
                className="text-white/80 hover:text-cyan-400 transition-colors font-medium"
              >
                –ù–æ–≤–æ—Å—Ç–∏
              </Link>
              <Link 
                to="/radar" 
                className="text-white/80 hover:text-cyan-400 transition-colors font-medium flex items-center gap-1"
              >
                <Icon name="Plane" size={16} />
                –†–∞–¥–∞—Ä
              </Link>
            </div>
            <Dialog open={isRouteModalOpen} onOpenChange={setIsRouteModalOpen}>
              <DialogTrigger asChild>
                <Button className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 border-0 text-white">
                  <Icon name="Route" size={16} className="mr-2" />
                  –ú–æ–π –º–∞—Ä—à—Ä—É—Ç
                </Button>
              </DialogTrigger>
              <DialogContent className="sm:max-w-[500px] bg-slate-800/95 backdrop-blur-xl border border-white/10">
                <DialogHeader>
                  <DialogTitle className="text-white text-xl font-semibold">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç</DialogTitle>
                  <DialogDescription className="text-white/70">
                    –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Å–≤–æ—é –ø–æ–µ–∑–¥–∫—É —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
                  </DialogDescription>
                </DialogHeader>
                <div className="space-y-6">
                  <div className="space-y-3">
                    <label className="text-white font-medium">–û—Ç–∫—É–¥–∞ (–†–æ—Å—Å–∏—è)</label>
                    <Select value={selectedFromCity} onValueChange={setSelectedFromCity}>
                      <SelectTrigger className="bg-white/10 border-white/20 text-white">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è" />
                      </SelectTrigger>
                      <SelectContent className="bg-slate-800 border-white/20">
                        {russianCities.map((city) => (
                          <SelectItem 
                            key={city.code} 
                            value={city.code}
                            className="text-white hover:bg-white/10"
                          >
                            {city.name}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div className="space-y-3">
                    <label className="text-white font-medium">–ö—É–¥–∞ (–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)</label>
                    <Select value={selectedToCountry} onValueChange={setSelectedToCountry}>
                      <SelectTrigger className="bg-white/10 border-white/20 text-white">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è" />
                      </SelectTrigger>
                      <SelectContent className="bg-slate-800 border-white/20 max-h-[200px]">
                        {countries.map((country) => (
                          <SelectItem 
                            key={country.code} 
                            value={country.code}
                            className="text-white hover:bg-white/10"
                          >
                            <span className="flex items-center gap-2">
                              {country.flag} {country.name}
                            </span>
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-3">
                    <label className="text-white font-medium">–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</label>
                    <Input
                      type="date"
                      value={departureDate}
                      onChange={(e) => setDepartureDate(e.target.value)}
                      className="bg-white/10 border-white/20 text-white [&::-webkit-calendar-picker-indicator]:invert"
                      min={new Date().toISOString().split('T')[0]}
                    />
                  </div>

                  <div className="flex items-center space-x-3">
                    <input
                      type="checkbox"
                      id="roundTrip"
                      checked={isRoundTrip}
                      onChange={(e) => {
                        setIsRoundTrip(e.target.checked)
                        if (!e.target.checked) {
                          setReturnDate('')
                        }
                      }}
                      className="w-4 h-4 rounded border-white/20 bg-white/10 text-blue-500 focus:ring-blue-500 focus:ring-offset-0"
                    />
                    <label htmlFor="roundTrip" className="text-white font-medium">
                      –û–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç
                    </label>
                  </div>

                  {isRoundTrip && (
                    <div className="space-y-3">
                      <label className="text-white font-medium">–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞</label>
                      <Input
                        type="date"
                        value={returnDate}
                        onChange={(e) => setReturnDate(e.target.value)}
                        className="bg-white/10 border-white/20 text-white [&::-webkit-calendar-picker-indicator]:invert"
                        min={departureDate || new Date().toISOString().split('T')[0]}
                      />
                    </div>
                  )}
                  
                  <Button 
                    onClick={() => {
                      if (selectedFromCity && selectedToCountry && departureDate) {
                        const selectedCountry = countries.find(c => c.code === selectedToCountry)
                        const destinationAirport = selectedCountry?.airport || selectedToCountry
                        
                        // –§–æ—Ä–º–∞—Ç URL –¥–ª—è Aeroflot —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
                        let aeroflotUrl = `https://www.aeroflot.ru/sb/booking?from=${selectedFromCity}&to=${destinationAirport}&departure=${departureDate}&passengers=1&class=economy&direct=false`
                        
                        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç –∏ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
                        if (isRoundTrip && returnDate) {
                          aeroflotUrl += `&return=${returnDate}&tripType=round`
                        } else {
                          aeroflotUrl += `&tripType=one-way`
                        }
                        
                        window.open(aeroflotUrl, '_blank')
                        setIsRouteModalOpen(false)
                      }
                    }}
                    className="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white border-0 h-12 text-lg font-semibold"
                    disabled={!selectedFromCity || !selectedToCountry || !departureDate || (isRoundTrip && !returnDate)}
                  >
                    <Icon name="ExternalLink" size={18} className="mr-2" />
                    –ù–∞–π—Ç–∏ —Ä–µ–π—Å—ã –Ω–∞ –ê—ç—Ä–æ—Ñ–ª–æ—Ç
                  </Button>
                  
                  <div className="text-center text-white/60 text-sm">
                    –ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –º–∞—Ä—à—Ä—É—Ç–∞ –∏ –¥–∞—Ç
                  </div>
                </div>
              </DialogContent>
            </Dialog>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="relative h-screen flex items-center justify-center overflow-hidden">
        <div 
          className="absolute inset-0 bg-cover bg-center bg-no-repeat scale-110"
          style={{ backgroundImage: 'url(/img/c3564582-71b0-4438-9415-5e1c70f4bb2e.jpg)' }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-black/60 via-black/40 to-black/60" />
        </div>
        
        {/* Floating Neon Elements */}
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute top-20 left-10 w-3 h-3 bg-cyan-400 rounded-full animate-pulse neon-glow-blue"></div>
          <div className="absolute top-40 right-20 w-4 h-4 bg-purple-500 rounded-full animate-pulse neon-glow-purple"></div>
          <div className="absolute bottom-32 left-1/4 w-2 h-2 bg-pink-400 rounded-full animate-pulse"></div>
          <div className="absolute top-1/3 right-1/3 w-3 h-3 bg-blue-400 rounded-full animate-pulse"></div>
          <div className="absolute bottom-1/4 right-1/4 w-2 h-2 bg-purple-400 rounded-full animate-pulse"></div>
        </div>
        
        <div className="relative z-10 text-center max-w-6xl mx-auto px-6">
          <div className="mb-8 animate-fade-in">
            <div className="inline-flex items-center space-x-2 bg-black/40 backdrop-blur-md rounded-full px-6 py-3 mb-8 border border-cyan-500/30 neon-border-blue">
              <div className="w-2 h-2 bg-cyan-400 rounded-full animate-pulse neon-glow-blue"></div>
              <span className="text-sm font-medium text-cyan-300 neon-text-cyan">–ò—Å—Å–ª–µ–¥—É–π –º–∏—Ä –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ</span>
            </div>
          </div>
          
          <h1 className="text-6xl md:text-8xl font-black mb-8 leading-none">
            <span className="bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 bg-clip-text text-transparent neon-text-blue">
              –ü–£–¢–ï–®–ï–°–¢–í–ò–Ø
            </span><br />
            <span className="text-white neon-text-purple">–ë–ï–ó –ì–†–ê–ù–ò–¶</span>
          </h1>
          
          <p className="text-xl md:text-2xl mb-12 text-white/80 max-w-3xl mx-auto font-light">
            –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–π–Ω—ã –ø–ª–∞–Ω–µ—Ç—ã —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É –º–∏—Ä–∞. 
            –ö–∞–∂–¥–∞—è —Ç–æ—á–∫–∞ ‚Äî —ç—Ç–æ –∏—Å—Ç–æ—Ä–∏—è, –∫—É–ª—å—Ç—É—Ä–∞ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ.
          </p>
          
          <div className="flex flex-col md:flex-row gap-6 justify-center">
            <Button 
              size="lg" 
              className="bg-gradient-to-r from-cyan-500 via-blue-600 to-purple-700 hover:from-cyan-600 hover:via-blue-700 hover:to-purple-800 text-white border-0 h-14 px-8 text-lg font-semibold neon-border-blue relative overflow-hidden group"
              onClick={() => setActiveSection('map')}
            >
              <div className="absolute inset-0 bg-gradient-to-r from-cyan-400/20 to-purple-600/20 animate-pulse"></div>
              <Icon name="Map" size={24} className="mr-3 relative z-10" />
              <span className="relative z-10">–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É</span>
            </Button>
            <Button 
              size="lg" 
              variant="outline" 
              className="border-2 border-purple-500/50 text-white hover:bg-purple-500/20 hover:border-purple-400 h-14 px-8 text-lg font-semibold bg-black/40 backdrop-blur-sm neon-border-purple"
            >
              <Icon name="Compass" size={24} className="mr-3" />
              –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ
            </Button>
          </div>
        </div>
      </section>

      {/* Partners Section - Neon Style */}
      <section className="py-16 px-6 relative bg-gradient-to-r from-black/40 via-purple-950/20 to-black/40 backdrop-blur-sm border-y border-purple-500/20">
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <h3 className="text-3xl font-bold mb-8 bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent neon-text-purple">
              –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–µ–º –≤–º–µ—Å—Ç–µ —Å –ê—ç—Ä–æ—Ñ–ª–æ—Ç–æ–º –∏ –Æ–¢—ç–π—Ä–æ–º
            </h3>
            <div className="flex flex-col md:flex-row items-center justify-center gap-12 md:gap-16">
              <a 
                href="https://www.aeroflot.ru/" 
                target="_blank" 
                rel="noopener noreferrer"
                className="flex items-center justify-center p-6 bg-black/60 rounded-2xl backdrop-blur-md border-2 border-blue-500/40 hover:border-blue-400 transition-all duration-300 hover:scale-105 cursor-pointer neon-border-blue group"
              >
                <img 
                  src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Aeroflot_logo.svg/2560px-Aeroflot_logo.svg.png" 
                  alt="–ê—ç—Ä–æ—Ñ–ª–æ—Ç" 
                  className="h-16 w-auto object-contain filter group-hover:drop-shadow-[0_0_15px_rgba(59,130,246,0.8)] transition-all duration-300"
                />
              </a>
              <a 
                href="https://www.utair.ru/" 
                target="_blank" 
                rel="noopener noreferrer"
                className="flex items-center justify-center p-6 bg-black/60 rounded-2xl backdrop-blur-md border-2 border-purple-500/40 hover:border-purple-400 transition-all duration-300 hover:scale-105 cursor-pointer neon-border-purple group"
              >
                <img 
                  src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/UTair_Aviation_logo.svg/2560px-UTair_Aviation_logo.svg.png" 
                  alt="–Æ–¢—ç–π—Ä" 
                  className="h-16 w-auto object-contain filter group-hover:drop-shadow-[0_0_15px_rgba(168,85,247,0.8)] transition-all duration-300"
                />
              </a>
            </div>
            <p className="text-cyan-300/70 text-sm mt-6 max-w-2xl mx-auto">
              –ù–∞–¥—ë–∂–Ω—ã–µ –∞–≤–∏–∞–ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∏ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É
            </p>
          </div>
        </div>
      </section>

      {/* Features Section - Neon Style */}
      <section className="py-24 px-6 relative">
        <div className="absolute inset-0 bg-gradient-to-b from-purple-950/10 via-black/0 to-cyan-950/10 pointer-events-none"></div>
        <div className="container mx-auto relative z-10">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold mb-6 bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 bg-clip-text text-transparent neon-text-blue">
              –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            </h2>
            <p className="text-xl text-cyan-200/70 max-w-3xl mx-auto font-light">
              –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–µ –º–µ—Å—Ç–æ, —á—Ç–æ–±—ã –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, 
              –∏—Å—Ç–æ—Ä–∏—é –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
            {destinations.map((destination) => (
              <Dialog key={destination.id}>
                <DialogTrigger asChild>
                  <Card className="group cursor-pointer bg-black/60 backdrop-blur-md border-2 border-cyan-500/30 hover:border-purple-500/60 transition-all duration-500 hover:scale-105 neon-border-blue hover:neon-border-purple overflow-hidden">
                    <div className="relative overflow-hidden">
                      <img 
                        src={destination.image} 
                        alt={destination.name}
                        className="w-full h-80 object-cover group-hover:scale-110 transition-transform duration-700"
                      />
                      <div className="absolute inset-0 bg-gradient-to-t from-black via-purple-950/30 to-transparent" />
                      <div className="absolute top-6 right-6">
                        <Badge className="bg-gradient-to-r from-cyan-500 via-blue-600 to-purple-700 text-white border-0 neon-border-blue">
                          {destination.category}
                        </Badge>
                      </div>
                      <div className="absolute bottom-6 left-6 right-6">
                        <h3 className="text-2xl font-bold text-white mb-2 neon-text-cyan group-hover:neon-text-purple transition-all">{destination.name}</h3>
                        <p className="text-white/80 text-sm flex items-center">
                          <Icon name="MapPin" size={16} className="mr-2" />
                          {destination.country}
                        </p>
                      </div>
                    </div>
                    <CardContent className="p-6">
                      <p className="text-white/70 mb-4 line-clamp-2">{destination.description}</p>
                      <div className="flex items-center text-blue-400 group-hover:text-blue-300 transition-colors">
                        <Icon name="ArrowRight" size={20} className="mr-2" />
                        <span className="font-medium">–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏</span>
                      </div>
                    </CardContent>
                  </Card>
                </DialogTrigger>

                <DialogContent className="max-w-6xl max-h-[90vh] overflow-y-auto bg-slate-900/95 backdrop-blur-md border border-white/10">
                  <DialogHeader>
                    <DialogTitle className="text-3xl flex items-center gap-3 text-white">
                      <Icon name="MapPin" size={28} className="text-blue-400" />
                      {destination.name}, {destination.country}
                    </DialogTitle>
                    <DialogDescription className="text-white/70 text-lg">
                      –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                    </DialogDescription>
                  </DialogHeader>

                  <div className="space-y-8">
                    <img 
                      src={destination.image} 
                      alt={destination.name}
                      className="w-full h-80 object-cover rounded-xl"
                    />

                    <Tabs defaultValue="overview" className="w-full">
                      <TabsList className="grid w-full grid-cols-4 bg-white/5 border border-white/10">
                        <TabsTrigger value="overview" className="data-[state=active]:bg-blue-500/20 data-[state=active]:text-blue-400">–û–±–∑–æ—Ä</TabsTrigger>
                        <TabsTrigger value="culture" className="data-[state=active]:bg-blue-500/20 data-[state=active]:text-blue-400">–ö—É–ª—å—Ç—É—Ä–∞</TabsTrigger>
                        <TabsTrigger value="practical" className="data-[state=active]:bg-blue-500/20 data-[state=active]:text-blue-400">–ü—Ä–∞–∫—Ç–∏—á–Ω–æ</TabsTrigger>
                        <TabsTrigger value="tips" className="data-[state=active]:bg-blue-500/20 data-[state=active]:text-blue-400">–°–æ–≤–µ—Ç—ã</TabsTrigger>
                      </TabsList>

                      <TabsContent value="overview" className="space-y-6 mt-8">
                        <div>
                          <h4 className="font-semibold mb-3 text-white text-lg">–û–ø–∏—Å–∞–Ω–∏–µ</h4>
                          <p className="text-white/70">{destination.description}</p>
                        </div>
                        
                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="Star" size={20} className="text-yellow-400" />
                            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                          </h4>
                          <ul className="grid grid-cols-2 gap-2">
                            {destination.highlights.map((highlight, index) => (
                              <li key={index} className="text-white/70 flex items-center gap-2">
                                <div className="w-1.5 h-1.5 bg-blue-400 rounded-full"></div>
                                {highlight}
                              </li>
                            ))}
                          </ul>
                        </div>

                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="Activity" size={20} className="text-green-400" />
                            –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                          </h4>
                          <div className="flex flex-wrap gap-2">
                            {destination.activities.map((activity, index) => (
                              <Badge key={index} variant="outline" className="border-white/20 text-white/80 bg-white/5">
                                {activity}
                              </Badge>
                            ))}
                          </div>
                        </div>

                        <div className="grid md:grid-cols-2 gap-6">
                          <div className="bg-white/5 rounded-xl p-6 border border-white/10">
                            <h4 className="font-semibold mb-3 flex items-center gap-2 text-white">
                              <Icon name="Cloud" size={20} className="text-blue-400" />
                              –ö–ª–∏–º–∞—Ç
                            </h4>
                            <p className="text-white/70">{destination.climate}</p>
                          </div>
                          <div className="bg-white/5 rounded-xl p-6 border border-white/10">
                            <h4 className="font-semibold mb-3 flex items-center gap-2 text-white">
                              <Icon name="Calendar" size={20} className="text-purple-400" />
                              –õ—É—á—à–µ–µ –≤—Ä–µ–º—è
                            </h4>
                            <p className="text-white/70">{destination.bestTime}</p>
                          </div>
                        </div>
                      </TabsContent>

                      <TabsContent value="culture" className="space-y-6 mt-8">
                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="Users" size={20} className="text-pink-400" />
                            –ö—É–ª—å—Ç—É—Ä–∞
                          </h4>
                          <p className="text-white/70">{destination.culture}</p>
                        </div>

                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="BookOpen" size={20} className="text-orange-400" />
                            –ò—Å—Ç–æ—Ä–∏—è
                          </h4>
                          <p className="text-white/70">{destination.history}</p>
                        </div>

                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="ChefHat" size={20} className="text-red-400" />
                            –ö—É—Ö–Ω—è
                          </h4>
                          <div className="flex flex-wrap gap-2">
                            {destination.cuisine.map((dish, index) => (
                              <Badge key={index} className="bg-red-500/20 text-red-300 border-red-500/30">
                                {dish}
                              </Badge>
                            ))}
                          </div>
                        </div>

                        <div className="grid md:grid-cols-2 gap-6">
                          <div className="bg-white/5 rounded-xl p-6 border border-white/10">
                            <h4 className="font-semibold mb-3 flex items-center gap-2 text-white">
                              <Icon name="Globe" size={20} className="text-blue-400" />
                              –Ø–∑—ã–∫
                            </h4>
                            <p className="text-white/70">{destination.language}</p>
                          </div>
                          <div className="bg-white/5 rounded-xl p-6 border border-white/10">
                            <h4 className="font-semibold mb-3 flex items-center gap-2 text-white">
                              <Icon name="DollarSign" size={20} className="text-green-400" />
                              –í–∞–ª—é—Ç–∞
                            </h4>
                            <p className="text-white/70">{destination.currency}</p>
                          </div>
                        </div>
                      </TabsContent>

                      <TabsContent value="practical" className="space-y-6 mt-8">
                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="Car" size={20} className="text-blue-400" />
                            –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
                          </h4>
                          <p className="text-white/70">{destination.transportation}</p>
                        </div>

                        <div>
                          <h4 className="font-semibold mb-3 flex items-center gap-2 text-white text-lg">
                            <Icon name="Home" size={20} className="text-purple-400" />
                            –†–∞–∑–º–µ—â–µ–Ω–∏–µ
                          </h4>
                          <div className="flex flex-wrap gap-2">
                            {destination.accommodation.map((type, index) => (
                              <Badge key={index} variant="outline" className="border-white/20 text-white/80 bg-white/5">
                                {type}
                              </Badge>
                            ))}
                          </div>
                        </div>

                        <div className="grid md:grid-cols-2 gap-6">
                          <div className="bg-white/5 rounded-xl p-6 border border-white/10">
                            <h4 className="font-semibold mb-3 flex items-center gap-2 text-white">
                              <Icon name="CreditCard" size={20} className="text-green-400" />
                              –ë—é–¥–∂–µ—Ç
                            </h4>
                            <p className="text-white/70">{destination.budget}</p>
                          </div>
                          <div className="bg-white/5 rounded-xl p-6 border border-white/10">
                            <h4 className="font-semibold mb-3 flex items-center gap-2 text-white">
                              <Icon name="Shield" size={20} className="text-yellow-400" />
                              –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
                            </h4>
                            <p className="text-white/70">{destination.safety}</p>
                          </div>
                        </div>
                      </TabsContent>

                      <TabsContent value="tips" className="space-y-6 mt-8">
                        <div>
                          <h4 className="font-semibold mb-4 flex items-center gap-2 text-white text-lg">
                            <Icon name="Lightbulb" size={20} className="text-yellow-400" />
                            –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
                          </h4>
                          <ul className="space-y-3">
                            {destination.tips.map((tip, index) => (
                              <li key={index} className="flex items-start gap-3 bg-white/5 rounded-lg p-4 border border-white/10">
                                <Icon name="CheckCircle" size={18} className="text-green-400 mt-0.5 flex-shrink-0" />
                                <span className="text-white/80">{tip}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                      </TabsContent>
                    </Tabs>
                  </div>
                </DialogContent>
              </Dialog>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-24 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-blue-600/20 via-purple-600/20 to-pink-600/20" />
        <div className="container mx-auto px-6 text-center relative z-10">
          <h2 className="text-5xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
            –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –º–∞—Ä—à—Ä—É—Ç
          </h2>
          <p className="text-xl mb-12 text-white/70 max-w-3xl mx-auto font-light">
            –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã 
            —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
          </p>
          <Button 
            size="lg" 
            className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white border-0 h-14 px-8 text-lg font-semibold"
            onClick={() => window.open('https://www.utair.ru', '_blank')}
          >
            <Icon name="MapPin" size={24} className="mr-3" />
            –ù–∞—á–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
          </Button>
        </div>
      </section>

      {/* Footer - Neon Style */}
      <footer className="bg-black/40 backdrop-blur-md border-t-2 border-cyan-500/30 py-12">
        <div className="container mx-auto px-6 text-center">
          <div className="flex items-center justify-center space-x-3 mb-6">
            <div className="w-10 h-10 rounded-xl bg-gradient-to-r from-cyan-500 via-blue-600 to-purple-700 flex items-center justify-center neon-border-blue">
              <Icon name="Compass" size={24} className="text-white" />
            </div>
            <span className="text-2xl font-bold bg-gradient-to-r from-cyan-400 to-purple-500 bg-clip-text text-transparent neon-text-blue">–°—Ç—Ä–∞–Ω–Ω–∏–∫</span>
          </div>
          <p className="text-cyan-300/60 text-lg mb-6">
            –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è ‚Ä¢ 2024
          </p>
          <div className="flex flex-col items-center gap-4">
            <p className="text-white/70 text-sm">–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö</p>
            <Button
              onClick={() => window.open('https://t.me/Strannik_com', '_blank')}
              className="bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white border-0 px-6 py-2 flex items-center gap-2"
            >
              <Icon name="Send" size={20} />
              –°–º–æ—Ç—Ä–µ—Ç—å
            </Button>
          </div>
        </div>
      </footer>
    </div>
  )
}